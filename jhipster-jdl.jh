entity Cliente{
numeroIncricao Long required,
nome String required,
cpf Long,
email String required,
endereco String required,
telefoneResidencial String,
telefoneComercial String,
telefoneCelular String,
localTrabalho String,
sexo GeneroPessoa required,
dataNascimento ZonedDateTime required,
ativo Boolean
}

relationship OneToMany {
Cliente{cliente(nome)} to Cliente
}


enum Genero {
ACAO, ANIMACAO, AVENTURA, COMEDIA, DOCUMENTARIO, DRAMA,
FICCAO, GUERRA, MUSICAL, POLICIAL, ROMANCE, SUSPENSE,
TERROR
}

enum GeneroPessoa{
MASCULINO, FEMININO, INDEFINIDO
}

enum TipoMidia{
DVD, VHS, HDDVD, BLURAY
}

entity Filme {
tituloOriginal String required,
tituloPortugues String required,
paises String,
ano Integer,
direcao String,
elenco String,
sinopse String,
duracao String,
genero Genero
}

entity ItemFilme{
numeroSerie String required,
tipoMidia TipoMidia required,
dataAquisicao ZonedDateTime required
}

relationship OneToMany {
Filme{itemfilme} to ItemFilme
}

entity Locacao{
dataLocacao ZonedDateTime required,
valor Double required
}

entity Reserva{
dataSolicitacao ZonedDateTime required
}

relationship OneToMany {
Reserva{midiaDesejada} to ItemFilme
}

relationship OneToMany {
Cliente{reserva} to Reserva
}

relationship OneToMany {
Cliente{locacao} to Locacao
}

relationship ManyToMany {
Locacao{itemLocado} to ItemFilme{locacao}
}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
